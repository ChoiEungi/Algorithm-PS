# 21.01.13 cu_1001 ~ cu_1083

cu_1013 : 
python에서 input으로 받은 값은 하나의 string으로 취급됨
2개 값을 input으로 한번에 받을 때, a,b = input().split()

cu_1033 : 
string a에 대해 a.upper(), a.lower()

cu_1034 : 
2,8,16진수에 대해서, 42 == 0b101010, 0o52, 0x2a 다 True
 bin(42) ‘0b101010’ …(10진수에서 2진수로), bin(0b101010) ‘0b101010’ 결과 동일
 hex(0b101010) ‘0x2a’ >>>str(0b101010) ‘42’
다른 진수의 문자열로 숫자형으로 변환하기
 int(‘0b101010’, 2) 42
 int(‘0o52’, 8) 42
 int(‘0x2a’, 16) 42   
int() 함수의 2번째 인자는 default 값이 10
format() 내장 함수를 이용하여 접두어 없애기
 format(42, ‘x’) ‘2a’ 

cu_1036 : 
chr(i) 아스키코드 값 -> 문자, ord(i) 문자 -> ascii code
 
cu_1048 : 
(비트 연산자 <<) left shift 연산자, 변수의 값을 왼쪽으로 지정된 비트 수 만큼 이동
240<<2 = 240 * (2^2) = 960
cu_1051 : 
int(True)는 1을 나타냄, int(False)는 0을 나타냄

cu_1056 :
1 ^ 0  1 returnd (xor 연산자)

cu_1059 : 
(비트 연산자) ~, |, &, ^, <<, >>
 비트단위논리연산 ~n = -n – 1

cu_1064 : 
(삼항 연산자) 참인경우 값 if 조건 else 거짓인경우 값

# 21.01.14 cu_1084 ~ cu_1099

cu_1093 : 
리스트 초기화 my_list = [0] * n

cu_1094 : 
list.reverse(), random.shuffle(list) 
list(enumerate([‘a’, ‘b’, ‘c’])) >>> [(0, ‘a’), (1, ‘’b), (2, ‘c’)]
print all elems of list without using loop 
a = [1, 2, 3] print(*a) : 1 2 3 printed, print(*a, sep = “, ”) : 1, 2, 3 printed

cu_1095 : 
min, max 리스트(튜플)에서 가장 작은 값, 큰 값 구한다

cu_1096 : 
*주의 2차원 배열 표현 시 ex) a = a[[1,2]]*3 [[1, 2], [1, 2], [1, 2]] : a[0], a[1], a[2]는 같은 객체 [1, 2]를 refer. 따라서, a[0][0] = 3 변경 시 [[3, 2], [3, 2], [3, 2]]
a = [[0]*3]*3 이런 표현 대신 a = [[0]*3 for i in range(3)]
2차원 배열 선언 시 a = [[]*2 for i in range(3)]
톱니형 리스트 선언 a = [[0]*i for i in [3, 1, 3, 2, 5]] 
2차원 리스트 정렬하기 sorted(반복가능한객체, key=정렬함수, reverse=True or False)
a = [[6, 0], [3,1], [1,2]] sorted(a, key=lambda a: a[1], reverse = True)
[[1,2], [3,1], [6,0]]
for _ in range(5): 변수 불필요하게 사용하지 x

cu_1097 : 
map(int, [‘1’, ‘2’]) 자체는 map object임
a = map(int, [‘1’, ‘2’]) 와 a = list(map(int, [‘1’, ‘2’])) 는 다름
x, y = map(int, [‘1’, ‘2’])와 x, y = list(map(int, [‘1’, ‘2’]))는 x, y = 1, 2와 같은 결과




